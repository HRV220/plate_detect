# test_backend.py
import shutil
from pathlib import Path
from typing import List

import uvicorn
from fastapi import FastAPI, File, Form, UploadFile, HTTPException

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ---
# –ü–∞–ø–∫–∞, –∫—É–¥–∞ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –≤—Å–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
RECEIVED_FILES_DIR = Path("received_files")

# –°–æ–∑–¥–∞–µ–º FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = FastAPI(
    title="–¢–µ—Å—Ç–æ–≤—ã–π –±—ç–∫–µ–Ω–¥ –¥–ª—è –ø—Ä–∏–µ–º–∞ —Ñ–∞–π–ª–æ–≤",
    description="–≠—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä –ø—Ä–∏–Ω–∏–º–∞–µ—Ç multipart/form-data –∑–∞–ø—Ä–æ—Å—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ñ–∞–π–ª—ã –ª–æ–∫–∞–ª—å–Ω–æ.",
)

@app.on_event("startup")
def on_startup():
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ. –°–æ–∑–¥–∞–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤."""
    RECEIVED_FILES_DIR.mkdir(exist_ok=True)
    print(f"--- –¢–µ—Å—Ç–æ–≤—ã–π –±—ç–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω. –§–∞–π–ª—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –≤ –ø–∞–ø–∫—É: '{RECEIVED_FILES_DIR}' ---")


@app.post("/api/images/upload")
async def handle_image_upload(
    task_id: str = Form(...),
    images: List[UploadFile] = File(...)
):
    """
    –≠–Ω–¥–ø–æ–∏–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ñ–∞–π–ª—ã –æ—Ç –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏.
    - task_id: –∏–∑–≤–ª–µ–∫–∞–µ—Ç—Å—è –∏–∑ –ø–æ–ª—è —Ñ–æ—Ä–º—ã 'task_id'
    - images: –∏–∑–≤–ª–µ–∫–∞–µ—Ç—Å—è –∏–∑ –ø–æ–ª—è —Ñ–æ—Ä–º—ã 'images' (–∫–æ—Ç–æ—Ä–æ–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º —Ñ–∞–π–ª–æ–≤)
    """
    print(f"\n‚úÖ –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –¥–ª—è Task ID: {task_id}")

    if not images:
        print("‚ùå –û—à–∏–±–∫–∞: –í –∑–∞–ø—Ä–æ—Å–µ –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤.")
        raise HTTPException(status_code=400, detail="No files were uploaded.")

    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∞–ø–∫—É –¥–ª—è —ç—Ç–æ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–¥–∞—á–∏, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø—É—Ç–∞–Ω–∏—Ü—ã
    task_save_dir = RECEIVED_FILES_DIR / task_id
    task_save_dir.mkdir(exist_ok=True)

    print(f"  - –ü–æ–ª—É—á–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(images)}")
    
    saved_files = []
    for image_file in images:
        file_location = task_save_dir / image_file.filename
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º shutil.copyfileobj –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
            with open(file_location, "wb") as buffer:
                shutil.copyfileobj(image_file.file, buffer)
            
            print(f"  - –°–æ—Ö—Ä–∞–Ω–µ–Ω —Ñ–∞–π–ª: {file_location}")
            saved_files.append(str(file_location))
        finally:
            # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª, —á—Ç–æ–±—ã –æ—Å–≤–æ–±–æ–¥–∏—Ç—å —Ä–µ—Å—É—Ä—Å—ã
            image_file.file.close()

    print(f"üéâ –í—Å–µ —Ñ–∞–π–ª—ã –¥–ª—è –∑–∞–¥–∞—á–∏ {task_id} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π JSON-–æ—Ç–≤–µ—Ç, –ø–æ—Ö–æ–∂–∏–π –Ω–∞ —Ç–æ—Ç, —á—Ç–æ –º—ã –∂–¥–µ–º –æ—Ç Laravel
    return {
        "message": f"Successfully received {len(saved_files)} files for task {task_id}",
        "files_saved_at": saved_files
    }

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É 8001, —á—Ç–æ–±—ã –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å —Å –æ—Å–Ω–æ–≤–Ω—ã–º —Å–µ—Ä–≤–∏—Å–æ–º (–∫–æ—Ç–æ—Ä—ã–π –Ω–∞ 8000)
    uvicorn.run(app, host="0.0.0.0", port=8001)